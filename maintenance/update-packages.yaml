- name: Update and upgrade apt packages
  hosts: all

  become: true

  tasks:
    - name: Update packages with apt
      apt:
        upgrade: yes
        update_cache: yes
      register: apt_update_result


    - name: Check if a reboot is required.
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_checksum: no
      register: reboot_required_file

    - name: Extract list of updated packages
      set_fact:
        updated_packages_list: "{{ apt_update_result.stdout_lines | select('match', '^Inst (.*?) \\(.*?\\) \\[.*?\\] \\((.*?) .*?\\)$') | map('regex_replace', '^Inst (.*?) \\(.*?\\) \\[.*?\\] \\((.*?) .*?\\)$', '\\1') | list }}"

    - name: Send update information to Telegram
      community.general.telegram:
        token: "{{ lookup('env', 'BOT_TOKEN') }}"
        api_args:
          chat_id: "{{ lookup('env', 'CHAT_ID') }}"
          parse_mode: "markdown"
          text:
            "({{ ansible_hostname }} @ {{ inventory_hostname }}) 
            Packages have been Updated, Reboot {{ '*required*' if reboot_required_file.stat.exists else '*NOT* required' }}.

            Number of updated packages: *{{ updated_packages_list | length }}*
            {% if updated_packages_list | length > 0 %}
            List of updated packages:\n
            {% for package in updated_packages_list %}
              - {{ package }}
            {% endfor %}
            {% endif %}"


    - name: Remove dependencies that are no longer required.
      ansible.builtin.apt:
        autoremove: yes